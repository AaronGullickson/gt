% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_rows.R
\name{summary_rows}
\alias{summary_rows}
\title{Add group-wise summary rows using aggregation functions}
\usage{
summary_rows(
  data,
  groups = everything(),
  columns = everything(),
  fns = NULL,
  fmt = NULL,
  missing_text = "---",
  formatter = NULL,
  ...
)
}
\arguments{
\item{data}{A table object that is created using the \code{\link[=gt]{gt()}} function.}

\item{groups}{The groups to consider for generation of group-wise summary
rows. By default this is set to \code{everything()}, which means that all
available groups will obtain summary rows. Providing the names of row
groups in \code{c()} will create a group-wise summary and generate summary rows
for the specified groups. Setting this to \code{TRUE} indicates that all
available groups will receive group-wise summary rows.}

\item{columns}{The columns for which the summaries should be calculated. By
default, this is every column that has data cells (given by
\code{everything()}).}

\item{fns}{Functions used for aggregations. This can include base functions
like \code{mean}, \code{min}, \code{max}, \code{median}, \code{sd}, or \code{sum} or any other
user-defined aggregation function. Multiple functions, each of which would
generate a different row, are to be supplied within a \code{list()}. We can
specify the functions by use of function names in quotes (e.g., \code{"sum"}),
as bare functions (e.g., \code{sum}), or in formula form (e.g.,
\code{minimum ~ min(.)}) where the LHS could be used to supply the summary row
label and id values.}

\item{fmt}{Formatting expressions in formula form. The RHS of \code{~} should
contain a formatting call (e.g.,
\verb{~ fmt_number(., decimals = 3, use_seps = FALSE}). Optionally, the LHS
could contain a group-targeting expression (e.g.,
\code{"group_a" ~ fmt_number(.)}).}

\item{missing_text}{The text to be used in place of \code{NA} values in summary
cells with no data outputs.}

\item{formatter}{A formatter function name. These can be any of the \verb{fmt_*()}
functions available in the package (e.g., \code{\link[=fmt_number]{fmt_number()}}, \code{\link[=fmt_percent]{fmt_percent()}},
etc.), or a custom function using \code{\link[=fmt]{fmt()}}. The options of a formatter can
be accessed through \code{...}.}

\item{...}{Values passed to the \code{formatter} function, where the provided
values are to be in the form of named vectors. For example, when using the
default \code{formatter} function, \code{\link[=fmt_number]{fmt_number()}}, options such as \code{decimals},
\code{use_seps}, and \code{locale} can be used.}
}
\value{
An object of class \code{gt_tbl}.
}
\description{
Add summary rows to one or more row groups by using the table data and any
suitable aggregation functions. Multiple summary rows can be added for
selected groups via expressions given to \code{fns}. You can selectively format
the values in the resulting summary cells by use of formatting expressions in
\code{fmt}.
}
\section{How to supply functions for aggregation in \code{fns}}{


There are a number of ways to express how an aggregation should work for
each summary row. In addition to that, we have the ability to pass important
information such as the summary row ID value and its label (the former
necessary for targeting within \code{\link[=tab_style]{tab_style()}} or \code{\link[=tab_footnote]{tab_footnote()}} and the
latter used for display in the rendered table). Here are a number of
instructive examples for how to supply such expressions.
\subsection{Double-sided formula with everything supplied}{

We can be explicit and provide a double-sided formula (in the form
\verb{<LHS> ~ <RHS>}) that expresses everything about a summary row. That is, it
has an aggregation expression (where \code{.} represents the data in the
focused column). Here's an example:

\code{list(id = "minimum", label = "min") ~ min(., na.rm = TRUE)}

The left side (the list) contains named elements that identify the \code{id} and
\code{label} for the summary row. The right side has an expression for obtaining
a minimum value (dropping \code{NA} values in the calculation).

The \code{list()} can be replaced with \code{c()} but the advantage of a list is
allowing the use of the \code{\link[=md]{md()}} and \code{\link[=html]{html()}} helper functions. The above
example can be written as:

\code{list(id = "minimum", label = md("**Minimum**")) ~ min(., na.rm = TRUE)}

and we can have that label value interpreted as Markdown text.
}

\subsection{Function names in quotes}{

With \code{fns = "min"} we get the equivalent of the fuller expression:

\code{list(id = "min", label = "min") ~ min(., na.rm = TRUE)}

For sake of convenience, common aggregation functions with the \code{na.rm}
argument will be rewritten with the \code{na.rm = TRUE} option.

Should you need to specify multiple aggregation functions in this way (giving
you multiple summary rows), use \code{c()} or \code{list()}.
}

\subsection{RHS formula expressions}{

With \code{fns = ~ min(.)} or \code{fns = list(~ min(.))}, \strong{gt} will use the function
name as the \code{id} and \code{label}. The expansion of this shorthand to full form
looks like this:

\code{list(id = "min", label = "min") ~ min(.)}

The RHS expression is kept as written and the name portion is both the \code{id}
and the \code{label}.
}

\subsection{Named vector or list with RHS formula expression}{

Using \code{fns = c(minimum = ~ min(.))} or \code{fns = list(minimum = ~ min(.))}
expands to this:

\code{list(id = "minimum", label = "minimum") ~ min(.)}
}

\subsection{Unnamed vector or list with RHS formula expression}{

With \code{fns = c("minimum", "min") ~ min(.)} or
\code{fns = list("minimum", "min") ~ min(.)} the LHS contains the \code{label} and \code{id}
values and, importantly, the order is \code{label} first and \code{id} second. This can
be rewritten as:

\code{list(id = "min", label = "minimum") ~ min(.)}

If the vector or list is partially named, \strong{gt} has enough to go on to
disambiguate the unnamed element. So with
\code{fns = c("minimum", label = "min") ~ min(.)}, \code{"min"} is indeed the \code{label}
and \code{"minimum"} is taken as the \code{id} value.
}

\subsection{A fully named list with three specific elements}{

We can avoid using a formula if we are satisfied with the default options of
a function (except some of those functions with the \code{na.rm} options, see
above). Instead, a list with the named elements \code{id}, \code{label}, and \code{fn} could
be used. It can look like this:

\code{fns = list(id = "mean_id", label = "average", fn = "mean")}

which translates to

\code{list(id = "mean_id", label = "average") ~ mean(., na.rm = TRUE)}
}
}

\section{Extraction of summary rows}{


Should we need to obtain the summary data for external purposes, the
\code{\link[=extract_summary]{extract_summary()}} function can be used with a \code{gt_tbl} object where summary
rows were added via \code{summary_rows()} or \code{\link[=grand_summary_rows]{grand_summary_rows()}}.
}

\section{Examples}{


Use \code{\link{sp500}} to create a \strong{gt} table with row groups. Create the summary
rows labeled \code{min}, \code{max}, and \code{avg} by row group (where each each row group
is a week number) with the \code{summary_rows()} function.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{sp500 \%>\%
  dplyr::filter(date >= "2015-01-05" & date <="2015-01-16") \%>\%
  dplyr::arrange(date) \%>\%
  dplyr::mutate(week = paste0("W", strftime(date, format = "\%V"))) \%>\%
  dplyr::select(-adj_close, -volume) \%>\%
  gt(
    rowname_col = "date",
    groupname_col = "week"
  ) \%>\%
  summary_rows(
    fns = list(
      "min",
      "max",
      list(label = "avg", fn = "mean")
    ),
    formatter = fmt_number,
    use_seps = FALSE
  )
}\if{html}{\out{</div>}}

\if{html}{\out{
<img src="https://raw.githubusercontent.com/rstudio/gt/master/images/man_summary_rows_1.png" alt="This image of a table was generated from the first code example in the `summary_rows()` help file." style="width:100\%;">
}}
}

\section{Function ID}{

5-1
}

\seealso{
Other row addition/modification functions: 
\code{\link{grand_summary_rows}()},
\code{\link{row_group_order}()}
}
\concept{row addition/modification functions}
