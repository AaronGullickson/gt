% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab_style_specific.R
\name{tab_style_body}
\alias{tab_style_body}
\title{Target cells in the table body and style accordingly}
\usage{
tab_style_body(
  data,
  style,
  columns = everything(),
  rows = everything(),
  values = NULL,
  pattern = NULL,
  fn = NULL,
  targets = "cell",
  extents = "body"
)
}
\arguments{
\item{data}{A table object that is created using the \code{\link[=gt]{gt()}} function.}

\item{style}{a vector of styles to use. The \code{\link[=cell_text]{cell_text()}}, \code{\link[=cell_fill]{cell_fill()}}, and
\code{\link[=cell_borders]{cell_borders()}} helper functions can be used here to more easily generate
valid styles. If using more than one helper function to define styles, all
calls must be enclosed in a \code{\link[=list]{list()}}. Custom CSS declarations can be used
for HTML output by including a \code{\link[=css]{css()}}-based statement as a list item.}

\item{columns}{The columns to format. Can either be a series of column names
provided in \code{\link[=c]{c()}}, a vector of column indices, or a helper function
focused on selections. The select helper functions are: \code{\link[=starts_with]{starts_with()}},
\code{\link[=ends_with]{ends_with()}}, \code{\link[=contains]{contains()}}, \code{\link[=matches]{matches()}}, \code{\link[=one_of]{one_of()}}, \code{\link[=num_range]{num_range()}}, and
\code{\link[=everything]{everything()}}.}

\item{rows}{Optional rows to format. Providing \code{\link[=everything]{everything()}} (the
default) results in all rows in \code{columns} being formatted. Alternatively,
we can supply a vector of row captions within \code{\link[=c]{c()}}, a vector of row
indices, or a helper function focused on selections. The select helper
functions are: \code{\link[=starts_with]{starts_with()}}, \code{\link[=ends_with]{ends_with()}}, \code{\link[=contains]{contains()}}, \code{\link[=matches]{matches()}},
\code{\link[=one_of]{one_of()}}, \code{\link[=num_range]{num_range()}}, and \code{\link[=everything]{everything()}}. We can also use expressions
to filter down to the rows we need (e.g.,
\verb{[colname_1] > 100 & [colname_2] < 50}).}

\item{values}{The specific value or values that should be targeted for
styling. If \code{pattern} is also supplied then \code{values} will be ignored.}

\item{pattern}{A regex pattern that can target solely those values in
\code{character}-based columns. If \code{values} is also supplied, \code{pattern} will
take precedence.}

\item{fn}{A supplied function that operates on each cell of each column
specified through \code{columns} and \code{rows}. The function should be fashioned
such that a single logical value is returned. If either of \code{values} or
\code{pattern} is also supplied, \code{fn} will take precedence.}

\item{targets}{A vector of styling target keywords to contain or expand the
target of each cell. By default, this is a vector just containing \code{"cell"}.
However, the keywords \code{"row"} and \code{"column"} may be used separately or in
combination to style the target cells' associated rows or columns.}

\item{extents}{A vector of broad locations to project styling. By default,
this is a vector just containing \code{"body"}, whereby styled rows or columns
(facilitated via inclusion of the \code{"row"} and \code{"column"} keywords in
\code{targets}) will not permeate into the stub or summary sections. Using the
keywords \code{"stub"} and \code{"summary"} may be used separately or in combination
to expand the styling into those locations.}
}
\value{
An object of class \code{gt_tbl}.
}
\description{
With the \code{tab_style_body()} function we can target cells though value, regex,
and custom matching rules and apply styles to them and their surrounding
context (i.e., styling an entire row or column wherein the match is found).
Just as with the general \code{\link[=tab_style]{tab_style()}} function, this function is focused on
the application of styles for HTML output only (as such, other output formats
will ignore all \code{tab_style()} calls).

Using the \verb{cell_*()} helper functions, we can modify:
\itemize{
\item the background color of the cell (\code{\link[=cell_fill]{cell_fill()}}: \code{color})
\item the cell's text color, font, and size (\code{\link[=cell_text]{cell_text()}}: \code{color}, \code{font},
\code{size})
\item the text style (\code{\link[=cell_text]{cell_text()}}: \code{style}), enabling the use of italics or
oblique text.
\item the text weight (\code{\link[=cell_text]{cell_text()}}: \code{weight}), allowing the use of thin to
bold text (the degree of choice is greater with variable fonts)
\item the alignment and indentation of text (\code{\link[=cell_text]{cell_text()}}: \code{align} and
\code{indent})
\item the cell borders (\code{\link[=cell_borders]{cell_borders()}})
}
}
\section{Function ID}{

2-11
}

\seealso{
Other part creation/modification functions: 
\code{\link{tab_caption}()},
\code{\link{tab_footnote}()},
\code{\link{tab_header}()},
\code{\link{tab_info}()},
\code{\link{tab_options}()},
\code{\link{tab_row_group}()},
\code{\link{tab_source_note}()},
\code{\link{tab_spanner_delim}()},
\code{\link{tab_spanner}()},
\code{\link{tab_stub_indent}()},
\code{\link{tab_stubhead}()},
\code{\link{tab_style}()}
}
\concept{part creation/modification functions}
