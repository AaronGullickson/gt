% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.R
\name{extract_summary}
\alias{extract_summary}
\title{Extract a summary list from a \strong{gt} object}
\usage{
extract_summary(data)
}
\arguments{
\item{data}{\emph{The gt table data object}

\verb{obj:<gt_tbl>} // \strong{required}

This is the \strong{gt} table object that is commonly created through use of the
\code{\link[=gt]{gt()}} function.}
}
\value{
A list of data frames containing summary data.
}
\description{
Get a list of summary row data frames from a \code{gt_tbl} object where summary
rows were added via \code{\link[=summary_rows]{summary_rows()}}. The output data frames contain the
\code{group_id} and \code{rowname} columns, whereby \code{rowname} contains descriptive stub
labels for the summary rows.
}
\section{Examples}{


Use a modified version of \code{\link{sp500}} the dataset to create a \strong{gt} table with
row groups and row labels. Create summary rows labeled as \code{min}, \code{max}, and
\code{avg} for every row group with \code{\link[=summary_rows]{summary_rows()}}. Then, extract the summary
rows as a list object.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{summary_extracted <-
  sp500 |>
  dplyr::filter(date >= "2015-01-05" & date <="2015-01-30") |>
  dplyr::arrange(date) |>
  dplyr::mutate(week = paste0("W", strftime(date, format = "\%V"))) |>
  dplyr::select(-adj_close, -volume) |>
  gt(
    rowname_col = "date",
    groupname_col = "week"
  ) |>
  summary_rows(
    groups = everything(),
    columns = c(open, high, low, close),
    fns = list(
      min = ~min(.),
      max = ~max(.),
      avg = ~mean(.)
    ),
  ) |>
  extract_summary()

summary_extracted
#> $summary_df_data_list
#> $summary_df_data_list$W02
#>   group_id row_id rowname date    open     high      low    close week
#> 1      W02    min     min   NA 2005.55 2029.610 1992.440 2002.610   NA
#> 2      W02    max     max   NA 2063.45 2064.430 2038.330 2062.140   NA
#> 3      W02    avg     avg   NA 2035.24 2048.562 2016.854 2031.208   NA
#> 
#> $summary_df_data_list$W03
#>   group_id row_id rowname date     open     high      low   close week
#> 1      W03    min     min   NA 1992.250 2018.400 1988.120 1992.67   NA
#> 2      W03    max     max   NA 2046.130 2056.930 2022.580 2028.26   NA
#> 3      W03    avg     avg   NA 2020.422 2033.288 1999.772 2014.93   NA
#> 
#> $summary_df_data_list$W04
#>   group_id row_id rowname date     open     high      low   close week
#> 1      W04    min     min   NA 2020.190 2028.940 2004.490 2022.55   NA
#> 2      W04    max     max   NA 2062.980 2064.620 2050.540 2063.15   NA
#> 3      W04    avg     avg   NA 2034.557 2048.707 2023.362 2042.41   NA
#> 
#> $summary_df_data_list$W05
#>   group_id row_id rowname date     open     high      low    close week
#> 1      W05    min     min   NA 2002.450 2023.320 1989.180 1994.990   NA
#> 2      W05    max     max   NA 2050.420 2057.620 2040.970 2057.090   NA
#> 3      W05    avg     avg   NA 2030.484 2039.186 2008.986 2021.008   NA
}\if{html}{\out{</div>}}

Use the summary list to make a new \strong{gt} table. The key thing is to use
\code{dplyr::bind_rows()} and then pass the tibble to \code{\link[=gt]{gt()}}.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{summary_extracted |>
  unlist(recursive = FALSE) |>
  dplyr::bind_rows() |>
  gt(groupname_col = "group_id") |>
  cols_hide(columns = row_id)
}\if{html}{\out{</div>}}

\if{html}{\out{
<img src="https://raw.githubusercontent.com/rstudio/gt/master/images/man_extract_summary_1.png" alt="This image of a table was generated from the first code example in the `extract_summary()` help file." style="width:100\%;">
}}
}

\section{Function ID}{

13-8
}

\section{Function Introduced}{

\code{v0.2.0.5} (March 31, 2020)
}

\seealso{
Other table export functions: 
\code{\link{as_gtable}()},
\code{\link{as_latex}()},
\code{\link{as_raw_html}()},
\code{\link{as_rtf}()},
\code{\link{as_word}()},
\code{\link{extract_body}()},
\code{\link{extract_cells}()},
\code{\link{gtsave}()}
}
\concept{table export functions}
