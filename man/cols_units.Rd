% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify_columns.R
\name{cols_units}
\alias{cols_units}
\title{Define units for one or more columns}
\usage{
cols_units(.data, ..., .list = list2(...))
}
\arguments{
\item{.data}{\emph{The gt table data object}

\verb{obj:<gt_tbl>} --- \strong{required}

This is the \strong{gt} table object that is commonly created through use of the
\code{\link[=gt]{gt()}} function.}

\item{...}{\emph{Column units definitions}

\verb{<multiple expressions>} --- \strong{required} (or, use \code{.list})

Expressions for the assignment of column units for the table columns in
\code{.data}. Two-sided formulas (e.g., \verb{<LHS> ~ <RHS>}) can be used, where the
left-hand side corresponds to selections of columns and the right-hand side
evaluates to single-length values for the units to apply. Column names
should be enclosed in \code{\link[=c]{c()}}. Select helpers like \code{\link[=starts_with]{starts_with()}},
\code{\link[=ends_with]{ends_with()}}, \code{\link[=contains]{contains()}}, \code{\link[=matches]{matches()}}, \code{\link[=one_of]{one_of()}}, and \code{\link[=everything]{everything()}}
can be used in the LHS. Named arguments are also valid as input for simple
mappings of column name to the \strong{gt} units syntax; they should be of the
form \verb{<column name> = <units text>}. Subsequent expressions that operate on
the columns assigned previously will result in overwriting column units
defintion values.}

\item{.list}{\emph{Alternative to \code{...}}

\verb{<list of multiple expressions>} --- \strong{required} (or, use \code{...})

Allows for the use of a list as an input alternative to \code{...}.}
}
\value{
An object of class \code{gt_tbl}.
}
\description{
Column labels can sometimes contain measurement units, and these might range
from easy to define and typeset (e.g., \code{"m/s"}) to very difficult. Such
difficulty can arise from the need to include subscripts or superscripts,
non-ASCII symbols, etc. The \code{cols_units()} function tries to make this task
easier by letting you apply text pertaining to units to various columns.
This takes advantage of \strong{gt}'s special unit syntax which provides several
conveniences for defining units, ultimately providing sensible formatting for
the specified table output format (i.e., HTML, LaTeX, RTF, etc.).
}
\details{
The columns supplied in \code{columns} must all exist in the table and none of
them can be in the \code{after} argument. The \code{after} column must also exist and
only one column should be provided here. If you need to place one or columns
at the beginning of the column series, the \code{\link[=cols_move_to_start]{cols_move_to_start()}} function
should be used. Similarly, if those columns to move should be placed at the
end of the column series then use \code{\link[=cols_move_to_end]{cols_move_to_end()}}.
}
\section{Function ID}{

5-6
}

\section{Function Introduced}{

\emph{In Development}
}

\seealso{
Other column modification functions: 
\code{\link{cols_align_decimal}()},
\code{\link{cols_align}()},
\code{\link{cols_hide}()},
\code{\link{cols_label_with}()},
\code{\link{cols_label}()},
\code{\link{cols_merge_n_pct}()},
\code{\link{cols_merge_range}()},
\code{\link{cols_merge_uncert}()},
\code{\link{cols_merge}()},
\code{\link{cols_move_to_end}()},
\code{\link{cols_move_to_start}()},
\code{\link{cols_move}()},
\code{\link{cols_unhide}()},
\code{\link{cols_width}()}
}
\concept{column modification functions}
